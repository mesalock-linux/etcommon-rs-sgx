[package]
name = "etcommon-bigint"
version = "0.2.10"
license = "Apache-2.0"
authors = ["Wei Tang <hi@that.world>"]
description = "Big integer (256-bit and 512-bit) implementation for SputnikVM and other Ethereum Classic clients."
repository = "https://github.com/ethereumproject/etcommon-rs"
keywords = ["no_std"]

[lib]
name = "bigint"

[dependencies]
heapsize = { git = "https://github.com/mesalock-linux/heapsize-sgx", optional = true }
byteorder = { git = "https://github.com/mesalock-linux/byteorder-sgx" }
etcommon-rlp = { version = "0.2", path = "../rlp", optional = true }
etcommon-hexutil = { version = "0.2", path = "../hexutil", optional = true }

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_rand = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_libc = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_tstd = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }

[features]
default = ["std", "mesalock_sgx", "rlp", "string"]
rlp = ["etcommon-rlp"]
string = ["etcommon-hexutil"]
heapsizeof = ["heapsize"]
x64asm_arithmetic = []
rust_arithmetic = []
std = ["mesalock_sgx"]
mesalock_sgx = ["sgx_rand", "sgx_libc", "sgx_tstd"]
